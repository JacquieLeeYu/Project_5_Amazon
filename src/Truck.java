/**
 * CS18000 Project 5 - Amazon
 *
 * <h1>Truck</h1> Represents a Truck
 *
 * @author Jacquie Yu, Siddarth Pillai
 * @version 2018-12-06
 */
public class Truck extends Vehicle {

    private final double gasRate = 1.66;

    /**
     * Default Constructor
     */
    //============================================================================
    Truck() {
        super();
    }
    //============================================================================

    /**
     * Constructor
     *
     * @param licensePlate license plate of vehicle
     * @param maxWeight    maximum weight that the vehicle can hold
     */
    //============================================================================
    public Truck(String licensePlate, double maxWeight) {
        super(licensePlate, maxWeight);
    }

    //============================================================================

    /*
     * =============================================================================
     * | Methods from Profitable Interface
     * =============================================================================
     */

    /**
     * Returns the profits generated by the packages currently in the Vehicle.
     * <p>
     * &sum;p<sub>price</sub> - (range<sub>max</sub> &times; 1.66)
     * </p>
     */
    @Override
    public double getProfit() {
        double revenue = 0;
        int maxRange = 0;
        double cost = 0;
        for (int i = 0; i < getPackages().size(); i++) {
            revenue += getPackages().get(i).getPrice();
        }
        for (int i = 0; i < getPackages().size(); i++) {
            int zip = getPackages().get(i).getDestination().getZipCode();
            int distance = Math.abs(zip - getZipDest());
            if (distance >= maxRange) {
                maxRange = distance;
            }
        }
        cost = maxRange * gasRate;
        return (revenue - cost);
    }

    /**
     * Generates a String of the truck report. Truck report includes:
     * <ul>
     * <li>License Plate No.</li>
     * <li>Destination</li>
     * <li>Current Weight/Maximum Weight</li>
     * <li>Net Profit</li>
     * <li>Shipping labels of all packages in truck</li>
     * </ul>
     *
     * @return Truck Report
     */
    @Override
    public String report() {
        String license = "License Plate No.: " + getLicensePlate();
        String destination = "Destination: " + getZipDest();
        String weight = "Weight Load: " + getCurrentWeight() + "/" + getMaxWeight();
        String profit = String.format("Net Profit: %.2f", getProfit());
        String labels = "";
        for (int i = 0; i < getPackages().size(); i++) {
            labels += getPackages().get(i).shippingLabel();
        }
        String report = "======== Truck Report =======\n"
                + license + "\n" + destination + "\n" + weight + "\n" + profit + "\n" + labels;
        return report;

    }


}